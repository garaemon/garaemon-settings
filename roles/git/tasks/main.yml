- name: Get ghq root directory
  command: ghq root
  register: git_ghq_root
  changed_when: false
  failed_when: false

- name: Set ghq root path
  set_fact:
    git_ghq_root_path: "{{ git_ghq_root.stdout if git_ghq_root.rc == 0 else ansible_env.HOME + '/ghq' }}"

- name: Check if git is installed
  apt:
    name: git
    state: present
  check_mode: true
  register: git_check
  when: ansible_os_family == "Debian"

- name: Install git
  apt:
    name: git
  become: true
  when:
    - ansible_os_family == "Debian"
    - git_check.changed

# Install delta via mise
- name: Install delta via mise
  command: mise use -g delta
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"
  retries: 3
  delay: 5
  register: git_delta_install_result
  until: git_delta_install_result.rc == 0

# configurations for delta
- name: Use delta as git pager
  community.general.git_config:
    name: core.pager
    scope: global
    value: delta

- name: Use color for diff
  community.general.git_config:
    name: interactive.diffFilter
    scope: global
    value: delta --color-only

- name: Use n and N to move between diff section
  community.general.git_config:
    name: delta.navigate
    scope: global
    value: true

- name: Set conflict style
  community.general.git_config:
    name: merge.conflictStyle
    scope: global
    value: zdiff3
- name: Enable side-by-side diff
  community.general.git_config:
    name: "delta.side-by-side"
    scope: global
    value: true

- name: Git config alias.see
  community.general.git_config:
    name: alias.see
    scope: global
    value: browse
- name: Git config alias.p
  community.general.git_config:
    name: alias.p
    scope: global
    value: pull-request
- name: Git config alias.br
  community.general.git_config:
    name: alias.br
    scope: global
    value: branch
- name: Git config alias.co
  community.general.git_config:
    name: alias.co
    scope: global
    value: checkout
- name: Git config alias.st
  community.general.git_config:
    name: alias.st
    scope: global
    value: status
- name: Git config alias.unstage
  community.general.git_config:
    name: alias.unstage
    scope: global
    value: "reset -q HEAD --"
- name: Git config alias.uncommit
  community.general.git_config:
    name: alias.uncommit
    scope: global
    value: "reset --mixed HEAD~"
- name: Git config alias.graph
  community.general.git_config:
    name: alias.graph
    scope: global
    value: "log --graph -10 --branches --remotes --tags --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order"
- name: Git config alias.precommit
  community.general.git_config:
    name: alias.precommit
    scope: global
    value: "diff --cached --diff-algorithm=minimal -w"
- name: Git config alias.unmerged
  community.general.git_config:
    name: alias.unmerged
    scope: global
    value: "diff --name-only --diff-filter=U"
- name: Git config alias.remotes
  community.general.git_config:
    name: alias.remotes
    scope: global
    value: "remote -v"
- name: Git config rebase.autostash
  community.general.git_config:
    name: rebase.autostash
    scope: global
    value: "true"
- name: Git config init.defaultBranch
  community.general.git_config:
    name: init.defaultBranch
    scope: global
    value: "main"
- name: Git config core.excludesFile (global gitignore)
  community.general.git_config:
    name: core.excludesFile
    scope: global
    value: "~/.gitignore"

- name: Check if gitignore exists
  stat:
    path: ~/.gitignore
  register: git_gitignore_stat

- name: Check file differences for gitignore
  command: diff ~/.gitignore "{{ git_ghq_root_path }}/github.com/garaemon/garaemon-settings/roles/git/tasks/files/gitignore"
  register: git_gitignore_diff
  failed_when: false
  changed_when: false
  when: git_gitignore_stat.stat.exists and not git_gitignore_stat.stat.islnk

- name: Remove existing gitignore if identical to target
  file:
    path: ~/.gitignore
    state: absent
  when:
    - git_gitignore_stat.stat.exists
    - not git_gitignore_stat.stat.islnk
    - git_gitignore_diff.rc == 0

- name: Create symlink for global gitignore
  file:
    src: "{{ git_ghq_root_path }}/github.com/garaemon/garaemon-settings/roles/git/tasks/files/gitignore"
    dest: ~/.gitignore
    state: link
