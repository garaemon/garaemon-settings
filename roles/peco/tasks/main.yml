- name: Get latest peco version
  shell: >
    curl -sI https://github.com/peco/peco/releases/latest | awk -F '/' '/^Location:/{print $NF}'
  register: peco_latest_version

- name: Set OS Name (darwin)
  set_fact:
    os_name: "darwin"
  when: ansible_os_family == "Darwin"

- name: Set OS Name (debian)
  set_fact:
    os_name: "linux"
  when: ansible_os_family == "Debian"

- name: Download latest peco (darwin)
  get_url: url=https://github.com/peco/peco/releases/download/{{ peco_latest_version.stdout }}/peco_darwin_amd64.zip dest=/tmp/peco_darwin_amd64.zip
  register: download_peco
  when: ansible_os_family == "Darwin"

- name: Extract peco (darwin)
  when: download_peco.changed and ansible_os_family == "Darwin"
  unarchive:
    src: /tmp/peco_darwin_amd64.zip
    dest: /tmp/peco_{{os_name | lower}}_amd64/

- name: Download latest peco (debian)
  get_url: url=https://github.com/peco/peco/releases/download/{{ peco_latest_version.stdout }}/peco_linux_amd64.tar.gz dest=/tmp/peco_linux_amd64.tar.gz
  register: download_peco
  when: ansible_os_family == "Debian"

- name: Extract peco (debian)
  when: download_peco.changed and ansible_os_family == "Debian"
  command: tar -xvzf /tmp/peco_linux_amd64.tar.gz chdir=/tmp/

- name: Create .local/bin
  file:
    path: ~/.local/bin
    state: directory

- name: Copy to .local/bin/
  copy:
    src: /tmp/peco_{{os_name | lower}}_amd64/peco
    dest: ~/.local/bin/peco
    mode: 0755
    remote_src: yes
